<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
  http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
    
    <bean id="dofstKWfpRecoveredProcessor" class="com.raytheon.uf.edex.ooi.decoder.dataset.FileDecoder">
        <constructor-arg name="name" value="DOFST_K_Recovered" />
        <constructor-arg name="basePythonCodePath" value="#{basePythonCodeLocalizationPath}" />
        <constructor-arg name="scriptPath" value="#{basePythonCodeLocalizationPath}/mi/dataset/driver/dofst_k/wfp/dofst_k_wfp_recovered_driver.py" />
    </bean>
    
    <bean id="dofstKWfpTelemeteredProcessor" class="com.raytheon.uf.edex.ooi.decoder.dataset.FileDecoder">
        <constructor-arg name="name" value="DOFST_K_Telemetered" />
        <constructor-arg name="basePythonCodePath" value="#{basePythonCodeLocalizationPath}" />
        <constructor-arg name="scriptPath" value="#{basePythonCodeLocalizationPath}/mi/dataset/driver/dofst_k/wfp/dofst_k_wfp_telemetered_driver.py" />
    </bean>
    
    <camelContext id="dofst-decode-camel"
        xmlns="http://camel.apache.org/schema/spring" errorHandlerRef="errorHandler">
        
        <endpoint id="dofstRecoveredFileEndpoint"
            uri="file:${edex.home}/data/ooi/dofst_k/recovered?delete=true&amp;delay=5000&amp;maxMessagesPerPoll=1000&amp;exclusiveReadLockStrategy=#fileChangedStrategy" />
        
        <endpoint id="dofstTelemeteredFileEndpoint"
            uri="file:${edex.home}/data/ooi/dofst_k/telemetered?delete=true&amp;delay=5000&amp;maxMessagesPerPoll=1000&amp;exclusiveReadLockStrategy=#fileChangedStrategy" />
                    
        <route id="dofstRecoveredFileConsumerRoute">
            <from ref="dofstRecoveredFileEndpoint" />
            <bean ref="fileToString" />
            <setHeader headerName="deliveryType">
                <constant>recovered</constant>
            </setHeader>
            <setHeader headerName="sensor">
                <constant>XX00XXXX-XX00X-00-DOFSTR000</constant>
            </setHeader>  
            <to uri="jms-ooi-dataset:queue:Ingest.dofstRecovered" />
        </route>
        
        <route id="dofstTelemeteredFileConsumerRoute">
            <from ref="dofstTelemeteredFileEndpoint" />
            <bean ref="fileToString" />
            <setHeader headerName="deliveryType">
                <constant>telemetered</constant>
            </setHeader>
            <setHeader headerName="sensor">
                <constant>XX00XXXX-XX00X-00-DOFSTT000</constant>
            </setHeader>  
            <to uri="jms-ooi-dataset:queue:Ingest.dofstTelemetered" />
        </route>
        
        <route id="dofstRecoveredIngest">
            <from uri="jms-ooi-dataset:queue:Ingest.dofstRecovered" />
            <doTry>
                <pipeline>
                    <bean ref="dofstKWfpRecoveredProcessor" />
                    <to uri="direct-vm:persistIndexAlert" />
                </pipeline>
                <doCatch>
                    <exception>java.lang.Throwable</exception>
                    <to uri="log:ooi.dofst?level=ERROR" />
                </doCatch>
            </doTry>
        </route>
        
        <route id="dofstTelemeteredIngest">
            <from uri="jms-ooi-dataset:queue:Ingest.dofstTelemetered" />
            <doTry>
                <pipeline>
                    <bean ref="dofstKWfpTelemeteredProcessor" />
                    <to uri="direct-vm:persistIndexAlert" />
                </pipeline>
                <doCatch>
                    <exception>java.lang.Throwable</exception>
                    <to uri="log:ooi.dofst?level=ERROR" />
                </doCatch>
            </doTry>
        </route>
        
    </camelContext>
    
</beans>