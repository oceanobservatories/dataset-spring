<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
  http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <bean id="nutnr-m_recoveredProcessor" class="com.raytheon.uf.edex.ooi.decoder.dataset.FileDecoder">
        <constructor-arg index="0" value="nutnr-m_recovered" />
        <constructor-arg index="1" value="#{basePythonCodeLocalizationPath}" />
        <constructor-arg index="2" value="mi.dataset.driver.nutnr_m.nutnr_m_recovered_driver" />
    </bean>

    <camelContext id="nutnr-m-decode-camel"
        xmlns="http://camel.apache.org/schema/spring" errorHandlerRef="errorHandler">


        <route id="nutnr-m_recoveredIngest">
            <from uri="jms-durable-ingest:queue:Ingest.nutnr-m_recovered?concurrentConsumers=1&amp;maxConcurrentConsumers=10&amp;disableReplyTo=true" />
            <doTry>
                <pipeline>
                    <bean ref="nutnr-m_recoveredProcessor" />
                    <to uri="direct-vm:generate?timeout=720000" />
                    <!-- 720000ms = 12 minutes -->
                </pipeline>
                <doCatch>
                    <exception>java.lang.Throwable</exception>
                    <to uri="log:ooi.nutnr-m?level=ERROR" />
                </doCatch>
            </doTry>
        </route>

    </camelContext>
</beans>