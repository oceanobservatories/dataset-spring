<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
  http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <bean id="parad-m-glider_recoveredProcessor" class="com.raytheon.uf.edex.ooi.decoder.dataset.FileDecoder">
        <constructor-arg name="name" value="parad-m-glider_recovered" />
        <constructor-arg name="basePythonCodePath" value="#{basePythonCodeLocalizationPath}" />
        <constructor-arg name="scriptPath" value="#{basePythonCodeLocalizationPath}/mi/dataset/driver/moas/gl/parad/parad_m_glider_recovered_driver.py" />
    </bean>

    <bean id="parad-m-glider_telemeteredProcessor" class="com.raytheon.uf.edex.ooi.decoder.dataset.FileDecoder">
        <constructor-arg name="name" value="parad-m-glider_telemetered" />
        <constructor-arg name="basePythonCodePath" value="#{basePythonCodeLocalizationPath}" />
        <constructor-arg name="scriptPath" value="#{basePythonCodeLocalizationPath}/mi/dataset/driver/moas/gl/parad/parad_m_glider_telemetered_driver.py" />
    </bean>

    <camelContext id="parad-m-glider-decode-camel"
        xmlns="http://camel.apache.org/schema/spring" errorHandlerRef="errorHandler">

        <endpoint id="parad-m-glider_recoveredFileEndpoint"
            uri="file:${edex.home}/data/ooi/parad-m-glider_recovered?delete=true&amp;delay=3000&amp;maxMessagesPerPoll=1&amp;exclusiveReadLockStrategy=#fileChangedStrategy" />

        <endpoint id="parad-m-glider_telemeteredFileEndpoint"
            uri="file:${edex.home}/data/ooi/parad-m-glider_telemetered?delete=true&amp;delay=3000&amp;maxMessagesPerPoll=1&amp;exclusiveReadLockStrategy=#fileChangedStrategy" />

        <route id="parad-m-glider_recoveredFileConsumerRoute">
            <from ref="parad-m-glider_recoveredFileEndpoint" />
            <setHeader headerName="deliveryType">
                <constant>recovered</constant>
            </setHeader>
            <setHeader headerName="sensor">
                <constant>XX00XXXX-XX00X-00-PARAD-M-R000</constant>
            </setHeader>
            <bean ref="fileToString" />
            <to uri="jms-durable:queue:Ingest.parad-m-glider_recovered" />
        </route>

        <route id="parad-m-glider_recoveredIngest">
            <from uri="jms-durable:queue:Ingest.parad-m-glider_recovered" />
            <doTry>
                <pipeline>
                    <bean ref="parad-m-glider_recoveredProcessor" />
                    <to uri="direct-vm:persistIndexAlert" />
                </pipeline>
                <doCatch>
                    <exception>java.lang.Throwable</exception>
                    <to uri="log:ooi.parad-m-glider?level=ERROR" />
                </doCatch>
            </doTry>
        </route>

        <route id="parad-m-glider_telemeteredFileConsumerRoute">
            <from ref="parad-m-glider_telemeteredFileEndpoint" />
            <setHeader headerName="deliveryType">
                <constant>telemetered</constant>
            </setHeader>
            <setHeader headerName="sensor">
                <constant>XX00XXXX-XX00X-00-PARAD-M-T000</constant>
            </setHeader>
            <bean ref="fileToString" />
            <to uri="jms-durable:queue:Ingest.parad-m-glider_telemetered" />
        </route>

        <route id="parad-m-glider_telemeteredIngest">
            <from uri="jms-durable:queue:Ingest.parad-m-glider_telemetered" />
            <doTry>
                <pipeline>
                    <bean ref="parad-m-glider_telemeteredProcessor" />
                    <to uri="direct-vm:persistIndexAlert" />
                </pipeline>
                <doCatch>
                    <exception>java.lang.Throwable</exception>
                    <to uri="log:ooi.parad-m-glider?level=ERROR" />
                </doCatch>
            </doTry>
        </route>

    </camelContext>
</beans>