<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
  http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <bean id="zplsc-b_recoveredProcessor" class="com.raytheon.uf.edex.ooi.decoder.dataset.FileEchogram">
        <constructor-arg name="name" value="zplsc-b_recovered" />
        <constructor-arg name="basePythonCodePath" value="#{basePythonCodeLocalizationPath}" />
        <constructor-arg name="scriptPath" value="mi.dataset.driver.zplsc_b.zplsc_b_telemetered_driver" />
        <constructor-arg name="outputPath" value="$ooi{ooi.media.fileserver.resourceBase}/zplsc-b/image" /> <!-- Temporary output directory location -->
    </bean>

    <bean id="fileStore" class="org.apache.camel.processor.idempotent.FileIdempotentRepository">
        <!-- the filename for the store -->
        <property name="fileStore" value="$ooi{ooi.source.zplscb}"/>  <!-- Delete this file to re-test previously downloaded raw data -->
        <!-- the max filesize in bytes for the file. Camel will trunk and flush the cache if the file gets bigger -->
        <property name="maxFileStoreSize" value="512000"/>
        <!-- the number of elements in our store -->
        <property name="cacheSize" value="250"/>
    </bean>
    
    <bean id="fileStager" class="com.raytheon.uf.edex.ooi.decoder.dataset.FileStager"/>

    <camelContext id="zplsc-b-decode-camel"
        xmlns="http://camel.apache.org/schema/spring" errorHandlerRef="errorHandler">

        <endpoint id="zplsc-b_recoveredRawFileEndpoint"
            uri="file:${edex.home}/data/ooi/zplsc-b_recovered/?recursive=true&amp;include=.*.raw&amp;delete=true&amp;runLoggingLevel=DEBUG&amp;delay=3s&amp;maxMessagesPerPoll=30" />
            
        <route id="zplsc-b_recoveredFileConsumerRoute">
            <from ref="zplsc-b_recoveredRawFileEndpoint" />
            <setHeader headerName="deliveryType">
                <constant>recovered</constant>
            </setHeader>
            <setHeader headerName="sensor">
                <constant>$ooi{ooi.refdes_template.zplscb}</constant>
            </setHeader>
            <bean ref="fileStager" />
            <to uri="jms-durable-ingest:queue:Ingest.zplsc-b_recovered" />
        </route>

        <route id="zplsc-b_recoveredIngest">
            <from uri="jms-durable-ingest:queue:Ingest.zplsc-b_recovered" />
            <doTry>
                <pipeline>
                    <bean ref="zplsc-b_recoveredProcessor" />
                    <to uri="direct-vm:generate?timeout=720000" />
                </pipeline>
                <doCatch>
                    <exception>java.lang.Throwable</exception>
                    <to uri="log:ooi.zplsc-b?level=ERROR" />
                </doCatch>
            </doTry>
        </route>
        
    </camelContext>
    
</beans>
